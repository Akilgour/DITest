@model DITest.Models.SalesOrderItem


@using (Ajax.BeginForm("SaveData", new AjaxOptions()
{
   
}))
{

    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>SalesOrderItem</h4>
        <hr />


        @Ajax.ActionLink("Update Dialog",
                            "ShowItemList",
                            new { saleOrderId = 1 },
                            new AjaxOptions
                            {
                                UpdateTargetId = "itemsList",
                                InsertionMode = InsertionMode.Replace,
                                HttpMethod = "GET",
                            },
                            new { @class = "btn btn-primary" })




        <button type="button" class="btn btn-primary" id="btnShowItemList" data-saleOrderId=1 data-toggle="modal" data-target="#dialogEdit">
            btnShowItemList
        </button>


    <button type="submit" class="btn btn-primary" value="Create"
            id="btnSubmitConsultation">
        Save
    </button>


        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.SaleOrderItemId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SaleOrderItemId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SaleOrderItemId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SaleOrderId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SaleOrderId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SaleOrderId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Cost, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Cost, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Cost, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>*@

        <p>
            <input type="submit" value="Create" />
        </p>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
